#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PizzeriaSconosciuto
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Pizzeria")]
	public partial class LinqToSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProdukty(Produkty instance);
    partial void UpdateProdukty(Produkty instance);
    partial void DeleteProdukty(Produkty instance);
    partial void InsertAdre(Adre instance);
    partial void UpdateAdre(Adre instance);
    partial void DeleteAdre(Adre instance);
    partial void InsertDostawy(Dostawy instance);
    partial void UpdateDostawy(Dostawy instance);
    partial void DeleteDostawy(Dostawy instance);
    partial void InsertDostawcy(Dostawcy instance);
    partial void UpdateDostawcy(Dostawcy instance);
    partial void DeleteDostawcy(Dostawcy instance);
    partial void InsertGrafik(Grafik instance);
    partial void UpdateGrafik(Grafik instance);
    partial void DeleteGrafik(Grafik instance);
    partial void InsertKontrakt(Kontrakt instance);
    partial void UpdateKontrakt(Kontrakt instance);
    partial void DeleteKontrakt(Kontrakt instance);
    partial void InsertPracownicy(Pracownicy instance);
    partial void UpdatePracownicy(Pracownicy instance);
    partial void DeletePracownicy(Pracownicy instance);
    partial void InsertSkladniki(Skladniki instance);
    partial void UpdateSkladniki(Skladniki instance);
    partial void DeleteSkladniki(Skladniki instance);
    partial void InsertZamowienia(Zamowienia instance);
    partial void UpdateZamowienia(Zamowienia instance);
    partial void DeleteZamowienia(Zamowienia instance);
    #endregion
		
		public LinqToSQLDataContext() : 
				base(global::PizzeriaSconosciuto.Properties.Settings.Default.PizzeriaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Produkty> Produkties
		{
			get
			{
				return this.GetTable<Produkty>();
			}
		}
		
		public System.Data.Linq.Table<Adre> Adres
		{
			get
			{
				return this.GetTable<Adre>();
			}
		}
		
		public System.Data.Linq.Table<Dostawa_Skladnik> Dostawa_Skladniks
		{
			get
			{
				return this.GetTable<Dostawa_Skladnik>();
			}
		}
		
		public System.Data.Linq.Table<Dostawy> Dostawies
		{
			get
			{
				return this.GetTable<Dostawy>();
			}
		}
		
		public System.Data.Linq.Table<Dostawcy> Dostawcies
		{
			get
			{
				return this.GetTable<Dostawcy>();
			}
		}
		
		public System.Data.Linq.Table<Grafik> Grafiks
		{
			get
			{
				return this.GetTable<Grafik>();
			}
		}
		
		public System.Data.Linq.Table<Kontrakt> Kontrakts
		{
			get
			{
				return this.GetTable<Kontrakt>();
			}
		}
		
		public System.Data.Linq.Table<Pracownicy> Pracownicies
		{
			get
			{
				return this.GetTable<Pracownicy>();
			}
		}
		
		public System.Data.Linq.Table<Skladniki> Skladnikis
		{
			get
			{
				return this.GetTable<Skladniki>();
			}
		}
		
		public System.Data.Linq.Table<Wchodzi_w_sklad> Wchodzi_w_sklads
		{
			get
			{
				return this.GetTable<Wchodzi_w_sklad>();
			}
		}
		
		public System.Data.Linq.Table<Zamowienia> Zamowienias
		{
			get
			{
				return this.GetTable<Zamowienia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produkty")]
	public partial class Produkty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProduktu;
		
		private string _Nazwa;
		
		private int _Ilosc;
		
		private float _cena;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProduktuChanging(int value);
    partial void OnIdProduktuChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OncenaChanging(float value);
    partial void OncenaChanged();
    #endregion
		
		public Produkty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduktu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProduktu
		{
			get
			{
				return this._IdProduktu;
			}
			set
			{
				if ((this._IdProduktu != value))
				{
					this.OnIdProduktuChanging(value);
					this.SendPropertyChanging();
					this._IdProduktu = value;
					this.SendPropertyChanged("IdProduktu");
					this.OnIdProduktuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Real NOT NULL")]
		public float cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this.OncenaChanging(value);
					this.SendPropertyChanging();
					this._cena = value;
					this.SendPropertyChanged("cena");
					this.OncenaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adres")]
	public partial class Adre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdresID;
		
		private string _Miasto;
		
		private string _Ulica;
		
		private int _Nr_domu;
		
		private System.Nullable<int> _Nr_mieszkania;
		
		private string _Kraj;
		
		private EntitySet<Dostawcy> _Dostawcies;
		
		private EntitySet<Pracownicy> _Pracownicies;
		
		private EntitySet<Zamowienia> _Zamowienias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdresIDChanging(int value);
    partial void OnAdresIDChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnNr_domuChanging(int value);
    partial void OnNr_domuChanged();
    partial void OnNr_mieszkaniaChanging(System.Nullable<int> value);
    partial void OnNr_mieszkaniaChanged();
    partial void OnKrajChanging(string value);
    partial void OnKrajChanged();
    #endregion
		
		public Adre()
		{
			this._Dostawcies = new EntitySet<Dostawcy>(new Action<Dostawcy>(this.attach_Dostawcies), new Action<Dostawcy>(this.detach_Dostawcies));
			this._Pracownicies = new EntitySet<Pracownicy>(new Action<Pracownicy>(this.attach_Pracownicies), new Action<Pracownicy>(this.detach_Pracownicies));
			this._Zamowienias = new EntitySet<Zamowienia>(new Action<Zamowienia>(this.attach_Zamowienias), new Action<Zamowienia>(this.detach_Zamowienias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdresID
		{
			get
			{
				return this._AdresID;
			}
			set
			{
				if ((this._AdresID != value))
				{
					this.OnAdresIDChanging(value);
					this.SendPropertyChanging();
					this._AdresID = value;
					this.SendPropertyChanged("AdresID");
					this.OnAdresIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_domu", DbType="Int NOT NULL")]
		public int Nr_domu
		{
			get
			{
				return this._Nr_domu;
			}
			set
			{
				if ((this._Nr_domu != value))
				{
					this.OnNr_domuChanging(value);
					this.SendPropertyChanging();
					this._Nr_domu = value;
					this.SendPropertyChanged("Nr_domu");
					this.OnNr_domuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_mieszkania", DbType="Int")]
		public System.Nullable<int> Nr_mieszkania
		{
			get
			{
				return this._Nr_mieszkania;
			}
			set
			{
				if ((this._Nr_mieszkania != value))
				{
					this.OnNr_mieszkaniaChanging(value);
					this.SendPropertyChanging();
					this._Nr_mieszkania = value;
					this.SendPropertyChanged("Nr_mieszkania");
					this.OnNr_mieszkaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kraj", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Kraj
		{
			get
			{
				return this._Kraj;
			}
			set
			{
				if ((this._Kraj != value))
				{
					this.OnKrajChanging(value);
					this.SendPropertyChanging();
					this._Kraj = value;
					this.SendPropertyChanged("Kraj");
					this.OnKrajChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adre_Dostawcy", Storage="_Dostawcies", ThisKey="AdresID", OtherKey="AdresID")]
		public EntitySet<Dostawcy> Dostawcies
		{
			get
			{
				return this._Dostawcies;
			}
			set
			{
				this._Dostawcies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adre_Pracownicy", Storage="_Pracownicies", ThisKey="AdresID", OtherKey="AdresID")]
		public EntitySet<Pracownicy> Pracownicies
		{
			get
			{
				return this._Pracownicies;
			}
			set
			{
				this._Pracownicies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adre_Zamowienia", Storage="_Zamowienias", ThisKey="AdresID", OtherKey="AdresID")]
		public EntitySet<Zamowienia> Zamowienias
		{
			get
			{
				return this._Zamowienias;
			}
			set
			{
				this._Zamowienias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dostawcies(Dostawcy entity)
		{
			this.SendPropertyChanging();
			entity.Adre = this;
		}
		
		private void detach_Dostawcies(Dostawcy entity)
		{
			this.SendPropertyChanging();
			entity.Adre = null;
		}
		
		private void attach_Pracownicies(Pracownicy entity)
		{
			this.SendPropertyChanging();
			entity.Adre = this;
		}
		
		private void detach_Pracownicies(Pracownicy entity)
		{
			this.SendPropertyChanging();
			entity.Adre = null;
		}
		
		private void attach_Zamowienias(Zamowienia entity)
		{
			this.SendPropertyChanging();
			entity.Adre = this;
		}
		
		private void detach_Zamowienias(Zamowienia entity)
		{
			this.SendPropertyChanging();
			entity.Adre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dostawa_Skladnik")]
	public partial class Dostawa_Skladnik
	{
		
		private int _DostawaID;
		
		private int _EAN;
		
		private int _Ilosc;
		
		private float _Cena;
		
		public Dostawa_Skladnik()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DostawaID", DbType="Int NOT NULL")]
		public int DostawaID
		{
			get
			{
				return this._DostawaID;
			}
			set
			{
				if ((this._DostawaID != value))
				{
					this._DostawaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAN", DbType="Int NOT NULL")]
		public int EAN
		{
			get
			{
				return this._EAN;
			}
			set
			{
				if ((this._EAN != value))
				{
					this._EAN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this._Ilosc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Real NOT NULL")]
		public float Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this._Cena = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dostawy")]
	public partial class Dostawy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DostawaID;
		
		private int _NIP;
		
		private System.DateTime _Data;
		
		private EntityRef<Dostawcy> _Dostawcy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDostawaIDChanging(int value);
    partial void OnDostawaIDChanged();
    partial void OnNIPChanging(int value);
    partial void OnNIPChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public Dostawy()
		{
			this._Dostawcy = default(EntityRef<Dostawcy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DostawaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DostawaID
		{
			get
			{
				return this._DostawaID;
			}
			set
			{
				if ((this._DostawaID != value))
				{
					this.OnDostawaIDChanging(value);
					this.SendPropertyChanging();
					this._DostawaID = value;
					this.SendPropertyChanged("DostawaID");
					this.OnDostawaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIP", DbType="Int NOT NULL")]
		public int NIP
		{
			get
			{
				return this._NIP;
			}
			set
			{
				if ((this._NIP != value))
				{
					if (this._Dostawcy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNIPChanging(value);
					this.SendPropertyChanging();
					this._NIP = value;
					this.SendPropertyChanged("NIP");
					this.OnNIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dostawcy_Dostawy", Storage="_Dostawcy", ThisKey="NIP", OtherKey="NIP", IsForeignKey=true)]
		public Dostawcy Dostawcy
		{
			get
			{
				return this._Dostawcy.Entity;
			}
			set
			{
				Dostawcy previousValue = this._Dostawcy.Entity;
				if (((previousValue != value) 
							|| (this._Dostawcy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dostawcy.Entity = null;
						previousValue.Dostawies.Remove(this);
					}
					this._Dostawcy.Entity = value;
					if ((value != null))
					{
						value.Dostawies.Add(this);
						this._NIP = value.NIP;
					}
					else
					{
						this._NIP = default(int);
					}
					this.SendPropertyChanged("Dostawcy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dostawcy")]
	public partial class Dostawcy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NIP;
		
		private int _AdresID;
		
		private string _Nazwa;
		
		private EntitySet<Dostawy> _Dostawies;
		
		private EntityRef<Adre> _Adre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNIPChanging(int value);
    partial void OnNIPChanged();
    partial void OnAdresIDChanging(int value);
    partial void OnAdresIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Dostawcy()
		{
			this._Dostawies = new EntitySet<Dostawy>(new Action<Dostawy>(this.attach_Dostawies), new Action<Dostawy>(this.detach_Dostawies));
			this._Adre = default(EntityRef<Adre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NIP
		{
			get
			{
				return this._NIP;
			}
			set
			{
				if ((this._NIP != value))
				{
					this.OnNIPChanging(value);
					this.SendPropertyChanging();
					this._NIP = value;
					this.SendPropertyChanged("NIP");
					this.OnNIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresID", DbType="Int NOT NULL")]
		public int AdresID
		{
			get
			{
				return this._AdresID;
			}
			set
			{
				if ((this._AdresID != value))
				{
					if (this._Adre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdresIDChanging(value);
					this.SendPropertyChanging();
					this._AdresID = value;
					this.SendPropertyChanged("AdresID");
					this.OnAdresIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dostawcy_Dostawy", Storage="_Dostawies", ThisKey="NIP", OtherKey="NIP")]
		public EntitySet<Dostawy> Dostawies
		{
			get
			{
				return this._Dostawies;
			}
			set
			{
				this._Dostawies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adre_Dostawcy", Storage="_Adre", ThisKey="AdresID", OtherKey="AdresID", IsForeignKey=true)]
		public Adre Adre
		{
			get
			{
				return this._Adre.Entity;
			}
			set
			{
				Adre previousValue = this._Adre.Entity;
				if (((previousValue != value) 
							|| (this._Adre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adre.Entity = null;
						previousValue.Dostawcies.Remove(this);
					}
					this._Adre.Entity = value;
					if ((value != null))
					{
						value.Dostawcies.Add(this);
						this._AdresID = value.AdresID;
					}
					else
					{
						this._AdresID = default(int);
					}
					this.SendPropertyChanged("Adre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dostawies(Dostawy entity)
		{
			this.SendPropertyChanging();
			entity.Dostawcy = this;
		}
		
		private void detach_Dostawies(Dostawy entity)
		{
			this.SendPropertyChanging();
			entity.Dostawcy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grafik")]
	public partial class Grafik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GrafikID;
		
		private int _PracownikID;
		
		private string _Dzien;
		
		private System.DateTime _Od;
		
		private System.DateTime _Do;
		
		private EntityRef<Pracownicy> _Pracownicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGrafikIDChanging(int value);
    partial void OnGrafikIDChanged();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    partial void OnDzienChanging(string value);
    partial void OnDzienChanged();
    partial void OnOdChanging(System.DateTime value);
    partial void OnOdChanged();
    partial void OnDoChanging(System.DateTime value);
    partial void OnDoChanged();
    #endregion
		
		public Grafik()
		{
			this._Pracownicy = default(EntityRef<Pracownicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrafikID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GrafikID
		{
			get
			{
				return this._GrafikID;
			}
			set
			{
				if ((this._GrafikID != value))
				{
					this.OnGrafikIDChanging(value);
					this.SendPropertyChanging();
					this._GrafikID = value;
					this.SendPropertyChanged("GrafikID");
					this.OnGrafikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int NOT NULL")]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					if (this._Pracownicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dzien", DbType="NChar(16) NOT NULL", CanBeNull=false)]
		public string Dzien
		{
			get
			{
				return this._Dzien;
			}
			set
			{
				if ((this._Dzien != value))
				{
					this.OnDzienChanging(value);
					this.SendPropertyChanging();
					this._Dzien = value;
					this.SendPropertyChanged("Dzien");
					this.OnDzienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Od", DbType="DateTime NOT NULL")]
		public System.DateTime Od
		{
			get
			{
				return this._Od;
			}
			set
			{
				if ((this._Od != value))
				{
					this.OnOdChanging(value);
					this.SendPropertyChanging();
					this._Od = value;
					this.SendPropertyChanged("Od");
					this.OnOdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Do", DbType="DateTime NOT NULL")]
		public System.DateTime Do
		{
			get
			{
				return this._Do;
			}
			set
			{
				if ((this._Do != value))
				{
					this.OnDoChanging(value);
					this.SendPropertyChanging();
					this._Do = value;
					this.SendPropertyChanged("Do");
					this.OnDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Grafik", Storage="_Pracownicy", ThisKey="PracownikID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownicy Pracownicy
		{
			get
			{
				return this._Pracownicy.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy.Entity = null;
						previousValue.Grafiks.Remove(this);
					}
					this._Pracownicy.Entity = value;
					if ((value != null))
					{
						value.Grafiks.Add(this);
						this._PracownikID = value.PracownikID;
					}
					else
					{
						this._PracownikID = default(int);
					}
					this.SendPropertyChanged("Pracownicy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kontrakt")]
	public partial class Kontrakt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KontraktID;
		
		private int _PracownikID;
		
		private float _Kwota;
		
		private EntityRef<Pracownicy> _Pracownicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKontraktIDChanging(int value);
    partial void OnKontraktIDChanged();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    partial void OnKwotaChanging(float value);
    partial void OnKwotaChanged();
    #endregion
		
		public Kontrakt()
		{
			this._Pracownicy = default(EntityRef<Pracownicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KontraktID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KontraktID
		{
			get
			{
				return this._KontraktID;
			}
			set
			{
				if ((this._KontraktID != value))
				{
					this.OnKontraktIDChanging(value);
					this.SendPropertyChanging();
					this._KontraktID = value;
					this.SendPropertyChanged("KontraktID");
					this.OnKontraktIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int NOT NULL")]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					if (this._Pracownicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kwota", DbType="Real NOT NULL")]
		public float Kwota
		{
			get
			{
				return this._Kwota;
			}
			set
			{
				if ((this._Kwota != value))
				{
					this.OnKwotaChanging(value);
					this.SendPropertyChanging();
					this._Kwota = value;
					this.SendPropertyChanged("Kwota");
					this.OnKwotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Kontrakt", Storage="_Pracownicy", ThisKey="PracownikID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownicy Pracownicy
		{
			get
			{
				return this._Pracownicy.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy.Entity = null;
						previousValue.Kontrakts.Remove(this);
					}
					this._Pracownicy.Entity = value;
					if ((value != null))
					{
						value.Kontrakts.Add(this);
						this._PracownikID = value.PracownikID;
					}
					else
					{
						this._PracownikID = default(int);
					}
					this.SendPropertyChanged("Pracownicy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pracownicy")]
	public partial class Pracownicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PracownikID;
		
		private int _AdresID;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _Stanowisko;
		
		private string _Telefon;
		
		private EntitySet<Grafik> _Grafiks;
		
		private EntitySet<Kontrakt> _Kontrakts;
		
		private EntitySet<Zamowienia> _Zamowienias;
		
		private EntitySet<Zamowienia> _Zamowienias1;
		
		private EntityRef<Adre> _Adre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPracownikIDChanging(int value);
    partial void OnPracownikIDChanged();
    partial void OnAdresIDChanging(int value);
    partial void OnAdresIDChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnStanowiskoChanging(string value);
    partial void OnStanowiskoChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    #endregion
		
		public Pracownicy()
		{
			this._Grafiks = new EntitySet<Grafik>(new Action<Grafik>(this.attach_Grafiks), new Action<Grafik>(this.detach_Grafiks));
			this._Kontrakts = new EntitySet<Kontrakt>(new Action<Kontrakt>(this.attach_Kontrakts), new Action<Kontrakt>(this.detach_Kontrakts));
			this._Zamowienias = new EntitySet<Zamowienia>(new Action<Zamowienia>(this.attach_Zamowienias), new Action<Zamowienia>(this.detach_Zamowienias));
			this._Zamowienias1 = new EntitySet<Zamowienia>(new Action<Zamowienia>(this.attach_Zamowienias1), new Action<Zamowienia>(this.detach_Zamowienias1));
			this._Adre = default(EntityRef<Adre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracownikID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PracownikID
		{
			get
			{
				return this._PracownikID;
			}
			set
			{
				if ((this._PracownikID != value))
				{
					this.OnPracownikIDChanging(value);
					this.SendPropertyChanging();
					this._PracownikID = value;
					this.SendPropertyChanged("PracownikID");
					this.OnPracownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresID", DbType="Int NOT NULL")]
		public int AdresID
		{
			get
			{
				return this._AdresID;
			}
			set
			{
				if ((this._AdresID != value))
				{
					if (this._Adre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdresIDChanging(value);
					this.SendPropertyChanging();
					this._AdresID = value;
					this.SendPropertyChanged("AdresID");
					this.OnAdresIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NChar(32) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stanowisko", DbType="NChar(16) NOT NULL", CanBeNull=false)]
		public string Stanowisko
		{
			get
			{
				return this._Stanowisko;
			}
			set
			{
				if ((this._Stanowisko != value))
				{
					this.OnStanowiskoChanging(value);
					this.SendPropertyChanging();
					this._Stanowisko = value;
					this.SendPropertyChanged("Stanowisko");
					this.OnStanowiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NChar(12)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Grafik", Storage="_Grafiks", ThisKey="PracownikID", OtherKey="PracownikID")]
		public EntitySet<Grafik> Grafiks
		{
			get
			{
				return this._Grafiks;
			}
			set
			{
				this._Grafiks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Kontrakt", Storage="_Kontrakts", ThisKey="PracownikID", OtherKey="PracownikID")]
		public EntitySet<Kontrakt> Kontrakts
		{
			get
			{
				return this._Kontrakts;
			}
			set
			{
				this._Kontrakts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Zamowienia", Storage="_Zamowienias", ThisKey="PracownikID", OtherKey="KierowcaID")]
		public EntitySet<Zamowienia> Zamowienias
		{
			get
			{
				return this._Zamowienias;
			}
			set
			{
				this._Zamowienias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Zamowienia1", Storage="_Zamowienias1", ThisKey="PracownikID", OtherKey="KucharzID")]
		public EntitySet<Zamowienia> Zamowienias1
		{
			get
			{
				return this._Zamowienias1;
			}
			set
			{
				this._Zamowienias1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adre_Pracownicy", Storage="_Adre", ThisKey="AdresID", OtherKey="AdresID", IsForeignKey=true)]
		public Adre Adre
		{
			get
			{
				return this._Adre.Entity;
			}
			set
			{
				Adre previousValue = this._Adre.Entity;
				if (((previousValue != value) 
							|| (this._Adre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adre.Entity = null;
						previousValue.Pracownicies.Remove(this);
					}
					this._Adre.Entity = value;
					if ((value != null))
					{
						value.Pracownicies.Add(this);
						this._AdresID = value.AdresID;
					}
					else
					{
						this._AdresID = default(int);
					}
					this.SendPropertyChanged("Adre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Grafiks(Grafik entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = this;
		}
		
		private void detach_Grafiks(Grafik entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = null;
		}
		
		private void attach_Kontrakts(Kontrakt entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = this;
		}
		
		private void detach_Kontrakts(Kontrakt entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = null;
		}
		
		private void attach_Zamowienias(Zamowienia entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = this;
		}
		
		private void detach_Zamowienias(Zamowienia entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy = null;
		}
		
		private void attach_Zamowienias1(Zamowienia entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy1 = this;
		}
		
		private void detach_Zamowienias1(Zamowienia entity)
		{
			this.SendPropertyChanging();
			entity.Pracownicy1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skladniki")]
	public partial class Skladniki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EAN;
		
		private string _Nazwa;
		
		private int _Ilosc;
		
		private bool _Wege;
		
		private bool _Gluten;
		
		private string _Opis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEANChanging(int value);
    partial void OnEANChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OnWegeChanging(bool value);
    partial void OnWegeChanged();
    partial void OnGlutenChanging(bool value);
    partial void OnGlutenChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public Skladniki()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EAN
		{
			get
			{
				return this._EAN;
			}
			set
			{
				if ((this._EAN != value))
				{
					this.OnEANChanging(value);
					this.SendPropertyChanging();
					this._EAN = value;
					this.SendPropertyChanged("EAN");
					this.OnEANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wege", DbType="Bit NOT NULL")]
		public bool Wege
		{
			get
			{
				return this._Wege;
			}
			set
			{
				if ((this._Wege != value))
				{
					this.OnWegeChanging(value);
					this.SendPropertyChanging();
					this._Wege = value;
					this.SendPropertyChanged("Wege");
					this.OnWegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gluten", DbType="Bit NOT NULL")]
		public bool Gluten
		{
			get
			{
				return this._Gluten;
			}
			set
			{
				if ((this._Gluten != value))
				{
					this.OnGlutenChanging(value);
					this.SendPropertyChanging();
					this._Gluten = value;
					this.SendPropertyChanged("Gluten");
					this.OnGlutenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wchodzi_w_sklad")]
	public partial class Wchodzi_w_sklad
	{
		
		private int _EAN;
		
		private int _ProduktID;
		
		private int _Ilosc;
		
		public Wchodzi_w_sklad()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAN", DbType="Int NOT NULL")]
		public int EAN
		{
			get
			{
				return this._EAN;
			}
			set
			{
				if ((this._EAN != value))
				{
					this._EAN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduktID", DbType="Int NOT NULL")]
		public int ProduktID
		{
			get
			{
				return this._ProduktID;
			}
			set
			{
				if ((this._ProduktID != value))
				{
					this._ProduktID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this._Ilosc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zamowienia")]
	public partial class Zamowienia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZamowienieID;
		
		private int _KierowcaID;
		
		private int _KucharzID;
		
		private int _AdresID;
		
		private System.DateTime _Data;
		
		private System.TimeSpan _Czas_Zamowienia;
		
		private System.TimeSpan _Czas_Dostawy;
		
		private int _Telefon;
		
		private EntityRef<Adre> _Adre;
		
		private EntityRef<Pracownicy> _Pracownicy;
		
		private EntityRef<Pracownicy> _Pracownicy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZamowienieIDChanging(int value);
    partial void OnZamowienieIDChanged();
    partial void OnKierowcaIDChanging(int value);
    partial void OnKierowcaIDChanged();
    partial void OnKucharzIDChanging(int value);
    partial void OnKucharzIDChanged();
    partial void OnAdresIDChanging(int value);
    partial void OnAdresIDChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnCzas_ZamowieniaChanging(System.TimeSpan value);
    partial void OnCzas_ZamowieniaChanged();
    partial void OnCzas_DostawyChanging(System.TimeSpan value);
    partial void OnCzas_DostawyChanged();
    partial void OnTelefonChanging(int value);
    partial void OnTelefonChanged();
    #endregion
		
		public Zamowienia()
		{
			this._Adre = default(EntityRef<Adre>);
			this._Pracownicy = default(EntityRef<Pracownicy>);
			this._Pracownicy1 = default(EntityRef<Pracownicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZamowienieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ZamowienieID
		{
			get
			{
				return this._ZamowienieID;
			}
			set
			{
				if ((this._ZamowienieID != value))
				{
					this.OnZamowienieIDChanging(value);
					this.SendPropertyChanging();
					this._ZamowienieID = value;
					this.SendPropertyChanged("ZamowienieID");
					this.OnZamowienieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KierowcaID", DbType="Int NOT NULL")]
		public int KierowcaID
		{
			get
			{
				return this._KierowcaID;
			}
			set
			{
				if ((this._KierowcaID != value))
				{
					if (this._Pracownicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKierowcaIDChanging(value);
					this.SendPropertyChanging();
					this._KierowcaID = value;
					this.SendPropertyChanged("KierowcaID");
					this.OnKierowcaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KucharzID", DbType="Int NOT NULL")]
		public int KucharzID
		{
			get
			{
				return this._KucharzID;
			}
			set
			{
				if ((this._KucharzID != value))
				{
					if (this._Pracownicy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKucharzIDChanging(value);
					this.SendPropertyChanging();
					this._KucharzID = value;
					this.SendPropertyChanged("KucharzID");
					this.OnKucharzIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresID", DbType="Int NOT NULL")]
		public int AdresID
		{
			get
			{
				return this._AdresID;
			}
			set
			{
				if ((this._AdresID != value))
				{
					if (this._Adre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdresIDChanging(value);
					this.SendPropertyChanging();
					this._AdresID = value;
					this.SendPropertyChanged("AdresID");
					this.OnAdresIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Czas_Zamowienia", DbType="Time NOT NULL")]
		public System.TimeSpan Czas_Zamowienia
		{
			get
			{
				return this._Czas_Zamowienia;
			}
			set
			{
				if ((this._Czas_Zamowienia != value))
				{
					this.OnCzas_ZamowieniaChanging(value);
					this.SendPropertyChanging();
					this._Czas_Zamowienia = value;
					this.SendPropertyChanged("Czas_Zamowienia");
					this.OnCzas_ZamowieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Czas_Dostawy", DbType="Time NOT NULL")]
		public System.TimeSpan Czas_Dostawy
		{
			get
			{
				return this._Czas_Dostawy;
			}
			set
			{
				if ((this._Czas_Dostawy != value))
				{
					this.OnCzas_DostawyChanging(value);
					this.SendPropertyChanging();
					this._Czas_Dostawy = value;
					this.SendPropertyChanged("Czas_Dostawy");
					this.OnCzas_DostawyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="Int NOT NULL")]
		public int Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adre_Zamowienia", Storage="_Adre", ThisKey="AdresID", OtherKey="AdresID", IsForeignKey=true)]
		public Adre Adre
		{
			get
			{
				return this._Adre.Entity;
			}
			set
			{
				Adre previousValue = this._Adre.Entity;
				if (((previousValue != value) 
							|| (this._Adre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adre.Entity = null;
						previousValue.Zamowienias.Remove(this);
					}
					this._Adre.Entity = value;
					if ((value != null))
					{
						value.Zamowienias.Add(this);
						this._AdresID = value.AdresID;
					}
					else
					{
						this._AdresID = default(int);
					}
					this.SendPropertyChanged("Adre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Zamowienia", Storage="_Pracownicy", ThisKey="KierowcaID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownicy Pracownicy
		{
			get
			{
				return this._Pracownicy.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy.Entity = null;
						previousValue.Zamowienias.Remove(this);
					}
					this._Pracownicy.Entity = value;
					if ((value != null))
					{
						value.Zamowienias.Add(this);
						this._KierowcaID = value.PracownikID;
					}
					else
					{
						this._KierowcaID = default(int);
					}
					this.SendPropertyChanged("Pracownicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pracownicy_Zamowienia1", Storage="_Pracownicy1", ThisKey="KucharzID", OtherKey="PracownikID", IsForeignKey=true)]
		public Pracownicy Pracownicy1
		{
			get
			{
				return this._Pracownicy1.Entity;
			}
			set
			{
				Pracownicy previousValue = this._Pracownicy1.Entity;
				if (((previousValue != value) 
							|| (this._Pracownicy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pracownicy1.Entity = null;
						previousValue.Zamowienias1.Remove(this);
					}
					this._Pracownicy1.Entity = value;
					if ((value != null))
					{
						value.Zamowienias1.Add(this);
						this._KucharzID = value.PracownikID;
					}
					else
					{
						this._KucharzID = default(int);
					}
					this.SendPropertyChanged("Pracownicy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
